services:
  web:
    restart: always
    build:
      context: .
      dockerfile: ./docker/django/Dockerfile
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic --noinput && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - ./static:/app/static
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend

  nginx:
    build:
      context: ./docker/nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./static:/app/static
    depends_on:
      - web
    networks:
      - backend

  db:
    image: postgres:16.0
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    env_file:
      - .env
    hostname: db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - backend



networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
